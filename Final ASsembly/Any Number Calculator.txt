            .model small   
.data   

array db 5 dup (?) 
enter db 13
lp dw ?
mull dw 0    
mg db "Enter The Number:$" 
second dw 0 
first dw 0  
op db 0 
ten dw 10 
hundred dw 100
msg1 db 0ah,0dh,"Enter Number then operator and than number$"
msg db 0ah,0dh,"The Answer Is :$"  
msg3 db 0ah,0dh,"$"
.code
mov ax, @data
mov ds, ax 
mov dx,offset mg
mov ah,09h
int 21h 

mov si, 0 
start:
mov ah, 1
int 21h 
cmp al, enter
je done1
sub al, 48 
mov ah,0
mov [array+si],al
inc si
jmp start
 
done1:  
mov mull, si 
mov di, 0
mov ax, 0
mov si, 0 
mov cx, 0
mov cx,mull     
;adding string input
addup: 
mov ax,0
mov al,[array+di]
mov lp,cx
again:
inc si
cmp cx,1
jG multiply 
there:
loop again
add bx,ax
inc di
mov cx,lp
loop addup
mov first,bx
mov bx,0

mov ah, 09h
lea dx, msg3
int 21h


mov si, 0 
start2:
mov ah, 1
int 21h 
cmp al, enter
je done2
sub al, 48 
mov ah,0
mov [array+si],al
inc si
jmp start2 
done2:  
mov mull, si 
mov di, 0
mov ax, 0
mov si, 0 
mov cx, 0
mov cx,mull     
;adding string input
addup2: 
mov ax,0
mov al,[array+di]
mov lp,cx
again2:
inc si
cmp cx,1
jG multiply2 
there2:
loop again2
add bx,ax
inc di
mov cx,lp
loop addup2
mov second,bx 

mov ah, 09h
lea dx, msg3
int 21h

Mov ah, 01h
int 21h
mov op,al
mov al,op

cmp al, '+'
je addition

cmp al, '*'
je Multiplication

cmp al, '-'
je Subtraction

cmp al, '/'
je Division

jmp divide
addition:   
mov ax,0
mov ax,first
add ax, second
jmp divide

subtraction: 
mov ax,0
mov ax,first
sub  ax,second
jmp divide
 
division:
mov ax,0 
mov dx,0
mov ax,first
mov bx,second
div  bx 
jmp divide

multiplication:
mov ax,0
mov ax,first
mul  second 
jmp divide



mov si,0 
mov cx,10

divide: 
mov bx,0
mov si,0
mov dx,0 
dividee:
mov bx,ax
div ten
mov [array+si],dl
inc si  
mov bx,ax
mov dx,0
cmp bx,0
je output
jmp dividee

output:

mov ah, 09h
lea dx, msg
int 21h
        
outputnumber:       
dec si
mov dl,[array+si]
add dl,48
mov ah,2
int 21h

cmp si,0
je done
jmp outputnumber

done:
mov ah,4ch
int 21h

multiply:
mul ten
jmp there

multiply2:
mul ten
jmp there2

end